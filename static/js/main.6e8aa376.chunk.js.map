{"version":3,"sources":["logo.svg","components/Heading.js","components/FontResult.js","components/FontList.js","components/FontProperties.js","components/InputBar.js","components/Footing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Heading","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","FontResult","props","call","myStyle","fontFamily","fontSize","fontWeight","boldChecked","fontStyle","italicChecked","style","inputValue","FontList","FontFamilies","Roboto","Galada","FontProperties","_this","boldStyle","color","italicStyle","onChange","onChangeFontFamily","map","eachFamily","onChangeFontWeight","eachWeight","type","autocomplete","placeholder","onChangeFontSize","onClick","event","onClickCheckbox","InputBar","Footing","App","handleInputChange","setState","target","state","name","checked","src_components_Heading","src_components_InputBar","bind","src_components_FontProperties","handleFontFamily","handleFontWeight","handleFontSize","handleCheckbox","src_components_FontResult","src_components_Footing","Boolean","window","location","hostname","match","routes","mount","/","route","title","head","Fragment","content","view","src_App_0","ReactDOM","render","StrictMode","react_navi_helmet_async_dist_es","dist_es","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e8aa376.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from \"react\";\r\nimport './Heading.css';\r\n\r\n\r\nclass Heading extends Component {\r\n\r\n render () {\r\n    return (\r\n      <div className=\"heading full-width\">\r\n        myTypography\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Heading;","import React, { Component } from \"react\";\r\nimport './FontResult.css';\r\nimport './Fonts.css'\r\n\r\nclass FontResult extends Component {\r\n\tconstructor(props) {\r\n    \tsuper(props);\r\n  \t}\r\n\r\n render () {\r\n    const myStyle = {\r\n      fontFamily: this.props.fontFamily,\r\n      fontSize: this.props.fontSize + 'px',\r\n      fontWeight: (this.props.boldChecked) ? 'bold' : 'normal',\r\n      fontStyle: (this.props.italicChecked) ? 'italic' : 'normal',\r\n    }\r\n\r\n    return (\r\n      <div className=\"font-result col-md-12\">\r\n          <output style={myStyle}>{this.props.inputValue}</output>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FontResult;","\r\nexport const FontList = {\r\n\t/* List of font families */\r\n\tFontFamilies: ['Roboto', 'Galada'],\r\n\t\r\n\t/* Individual font families and their font weights */\r\n\tRoboto: ['Roboto-Regular', 'Roboto-Black', 'Roboto-BlackItalic', 'Roboto-Bold', 'Roboto-BoldItalic', 'Roboto-Italic', 'Roboto-Light', 'Roboto-LightItalic', 'Roboto-Medium', 'Roboto-MediumItalic', 'Roboto-Thin', 'Roboto-ThinItalic'],\r\n\tGalada: ['Galada-Regular'],\r\n}\r\n","import React, { Component } from \"react\";\r\nimport './FontProperties.css';\r\nimport { FontList } from './FontList';\r\n\r\nclass FontProperties extends Component {\r\n  \tconstructor(props) {\r\n\t    super(props);\r\n\t}\r\n\r\n render () {\r\n \tconst boldStyle = {\r\n \t\tcolor: (this.props.boldChecked) ? '#ed2445' : '#000000',\r\n \t}\r\n \tconst italicStyle = {\r\n \t\tcolor: (this.props.italicChecked) ? '#ed2445' : '#000000',\r\n \t}\r\n\r\n    return (\r\n      <div className=\"col-xs-12 col-sm-12 col-md-7 col-lg-6 zero-padding\">\r\n        <form className=\"properties-form\">\r\n\t\t\t<label>\r\n\t\t\t\tFont Properties\r\n\t\t\t\t<br />\r\n\t\t\t\t<div className=\"properties-flex-display\">\r\n\t\t\t\t\t<select className=\"responsive-font-size\" value={this.props.fontFamily} onChange={this.props.onChangeFontFamily}>\r\n\t\t\t\t\t\t<option></option>\r\n\t\t\t\t\t\t{\tFontList.FontFamilies.map(eachFamily =>\r\n\t\t\t\t\t\t\t\t<option value={eachFamily}>{eachFamily}</option>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t<select className=\"responsive-font-size\" value={this.props.fontWeight} onChange={this.props.onChangeFontWeight}>\r\n\t\t\t\t\t\t<option></option>\r\n\t\t\t\t\t\t{\tthis.props.fontFamily ? ( \r\n\t\t\t\t\t\t\t\tFontList[this.props.fontFamily].map(eachWeight =>\r\n\t\t\t\t\t\t\t\t\t<option value={eachWeight}>{eachWeight}</option>\r\n\t\t\t\t\t\t\t)) : (\r\n\t\t\t\t\t\t\t\t<option></option>\r\n\t\t\t\t\t\t\t)\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"input-font-size responsive-font-size\"\r\n\t\t\t\t\t\tvalue={this.props.fontSize}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\t\tplaceholder=\"10\"\r\n\t\t\t\t\t\tonChange={this.props.onChangeFontSize}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<label className=\"checkbox responsive-font-size\">\r\n\t\t\t\t  \t<span style={boldStyle}>Bold</span>\r\n\t\t\t\t \t<input \r\n\t\t\t\t \t\tclassName=\"zero-margin\" \r\n\t\t\t\t \t\ttype=\"checkbox\" \r\n\t\t\t\t \t\tonClick={(event) => this.props.onClickCheckbox(event, 'bold')}\r\n\t\t\t\t \t/>\r\n\t\t\t\t  \t<span className=\"checkmark\"></span>\r\n\t\t\t\t</label>\r\n\t\t\t\t<label className=\"checkbox responsive-font-size\">\r\n\t\t\t\t  \t<span style={italicStyle}>Italic</span>\r\n\t\t\t\t \t<input \r\n\t\t\t\t \t\tclassName=\"zero-margin\" \r\n\t\t\t\t \t\ttype=\"checkbox\"\r\n\t\t\t\t \t\tonClick={(event) => this.props.onClickCheckbox(event, 'italic')}\r\n\t\t\t\t \t/>\r\n\t\t\t\t  \t<span className=\"checkmark\"></span>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t</label>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FontProperties;","import React, { Component } from \"react\";\r\nimport './InputBar.css';\r\n\r\nclass InputBar extends Component {\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t}\r\n\r\n\trender() {\r\n\t    return (\r\n\t      <div className=\"col-xs-12 col-sm-12 col-md-5 col-lg-6 zero-padding\">\r\n\t\t\t<form className=\"inputform\">\r\n\t\t\t\t<label>\r\n\t\t\t\t\tYour Text\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"inputform__input\"\r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={this.props.inputValue}               \r\n\t\t\t\t\t\tonChange={this.props.onChange}\r\n\t\t\t\t\t\tplaceholder=\"myTypography\"\r\n\t\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n            </form>\r\n\t      </div>\r\n\t    )\r\n\t}\r\n}\r\n\r\nexport default InputBar;","import React, { Component } from \"react\";\r\nimport './Footing.css';\r\n\r\nclass Footing extends Component {\r\n\r\n render () {\r\n    return (\r\n      <div className=\"footing\">\r\n      \tCONTACT\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footing;","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport Heading from './components/Heading';\r\nimport FontResult from './components/FontResult';\r\nimport FontProperties from './components/FontProperties';\r\nimport InputBar from './components/InputBar';\r\nimport Footing from './components/Footing';\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      inputValue: \"\",\r\n      fontFamily: \"\",\r\n      fontWeight: \"\",\r\n      fontSize: 20,\r\n      boldChecked: false,\r\n      italicChecked: false,\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ inputValue: event.target.value })\r\n  }\r\n\r\n  handleFontFamily(event) {\r\n    this.setState({ fontFamily: event.target.value });\r\n  }\r\n\r\n  handleFontWeight(event) {\r\n    this.setState({ fontWeight: event.target.value });\r\n  }\r\n\r\n  handleFontSize(event) {\r\n    this.setState({ fontSize: event.target.value });\r\n  }\r\n\r\n  handleCheckbox(event, name) {\r\n    if (name === 'bold')\r\n      this.setState({ boldChecked: event.target.checked });\r\n    else\r\n      this.setState({ italicChecked: event.target.checked });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"outer-container\">\r\n\r\n        <div className=\"container\">\r\n\r\n          <Heading />\r\n\r\n          <div className=\"container-body\">\r\n            <div className=\"row input-bar-wrapper\">\r\n              <InputBar \r\n                inputValue={this.state.inputValue}\r\n                onChange={this.handleInputChange.bind(this)}\r\n              />\r\n              <FontProperties \r\n                fontFamily={this.state.fontFamily}\r\n                onChangeFontFamily={this.handleFontFamily.bind(this)}\r\n                fontWeight={this.state.fontWeight}\r\n                onChangeFontWeight={this.handleFontWeight.bind(this)}\r\n                fontSize={this.state.fontSize}\r\n                onChangeFontSize={this.handleFontSize.bind(this)}\r\n                boldChecked={this.state.boldChecked}\r\n                italicChecked={this.state.italicChecked}\r\n                onClickCheckbox={this.handleCheckbox.bind(this)}\r\n              />\r\n            </div>\r\n            <div className=\"row font-result-wrapper\">\r\n              <FontResult \r\n                inputValue={this.state.inputValue}\r\n                fontFamily={this.state.fontWeight}\r\n                fontSize={this.state.fontSize}\r\n                boldChecked={this.state.boldChecked}\r\n                italicChecked={this.state.italicChecked}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Footing />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMemoryNavigation, mount, route } from 'navi';\r\nimport { Router } from 'react-navi';\r\nimport HelmetProvider from 'react-navi-helmet-async';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\n\r\nconst routes = mount({\r\n  '/': route({\r\n    title: 'myTypography',\r\n    head: <>\r\n      <meta name=\"description\" content=\"My Great description\" />\r\n    \t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    </>,\r\n    view: <App /> \r\n  })\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \t<HelmetProvider>\r\n    \t<Router routes={routes} basename=\"/mytypography\" />\r\n    </HelmetProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}